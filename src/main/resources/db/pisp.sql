/**
 * Copyright (c) 2018, WSO2 Inc. (http://www.wso2.com). All Rights Reserved.
 * This software is the property of WSO2 Inc. and its suppliers, if any.
 * Dissemination of any information or reproduction of any material contained
 * herein is strictly forbidden, unless permitted by WSO2 in accordance with
 * the WSO2 Commercial License available at http://wso2.com/licenses. For specific
 * language governing the permissions and limitations under this license,
 * please see the license as well as any agreement youâ€™ve entered into with
 * WSO2 governing the purchase of this software and any associated services.
 */

CREATE DATABASE IF NOT EXISTS openbank_pisp_mgtdb;
USE openbank_pisp_mgtdb;

CREATE TABLE IF NOT EXISTS E_SHOPS (
  E_SHOP_USERNAME              VARCHAR(255)   NOT NULL,
  E_SHOP_NAME              VARCHAR(255)   NOT NULL,
  REGISTERED_NO           VARCHAR(255)   NOT NULL,
  REGISTERED_BUSINESS_NAME       VARCHAR(255) NOT NULL,
  REGISTERED_COUNTRY            VARCHAR(255) DEFAULT NULL,
  ECOMMERCE_MARKETPLACE_CATEGORY        ENUM ('single_vendor', 'multi_vendor'),
  CONNECTED_DATE          TIMESTAMP     DEFAULT CURRENT_TIMESTAMP,
  PASSWORD_HASH       VARBINARY(255) NOT NULL,
  SALT               VARBINARY(255) NOT NULL,
  CLIENT_ID          VARCHAR(255)   NOT NULL,
  CLIENT_SECRET     VARCHAR(255)   NOT NULL,
  EMAIL             VARCHAR(255) DEFAULT NULL,
  CONSTRAINT pk_e_shop PRIMARY KEY (E_SHOP_USERNAME),
  CONSTRAINT uk_e_shop UNIQUE (CLIENT_ID)
)
  ENGINE = InnoDB;

CREATE TABLE IF NOT EXISTS BANKS (
  BANK_UID             VARCHAR(255)   NOT NULL,
  BANK_IDENTIFICATION_SCHEME  ENUM('BICFI'),
  BANK_IDENTIFICATION_NO  VARCHAR(255) NOT NULL,
  BANK_NAME  VARCHAR(255) NOT NULL,
  SPEC_FOR_OB   ENUM('UK','BERLIN','STET'),
  STATUS            ENUM ('active', 'de-active') NOT NULL,
  CONSTRAINT pk_banks PRIMARY KEY (BANK_UID)
)
  ENGINE = InnoDB;


CREATE TABLE IF NOT EXISTS MERCHANTS (
  MERCHANT_ID               VARCHAR(255)   NOT NULL,
  E_SHOP_USERNAME              VARCHAR(255)   NOT NULL,
  MERCHANT_NAME           VARCHAR(255)   NOT NULL,
  MERCHANT_IDENTIFICATION_BY_ESHOP   VARCHAR(255) NOT NULL,
  MERCHANT_CATEGORY_CODE    VARCHAR(20) NOT NULL,
  CONSTRAINT Fk_merchant_e_shop_username FOREIGN KEY (E_SHOP_USERNAME) REFERENCES E_SHOPS (E_SHOP_USERNAME) ON DELETE CASCADE,
  CONSTRAINT pk_merchant PRIMARY KEY (E_SHOP_USERNAME,MERCHANT_IDENTIFICATION_BY_ESHOP),
  CONSTRAINT uk_merchant UNIQUE (MERCHANT_ID)
)
  ENGINE = InnoDB;

CREATE TABLE IF NOT EXISTS CREDITOR_ACCOUNTS (
  CREDITOR_ACCOUNT_UID            VARCHAR(255)   NOT NULL,
  MERCHANT_ID                     VARCHAR(255)   NOT NULL,
  BANK_IDENTIFICATION_SCHEME      ENUM('BICFI'),
  BANK_IDENTIFICATION_NO          VARCHAR(255) NOT NULL,
  BANK_NAME                       VARCHAR(255) NOT NULL,
  ACCOUNT_IDENTIFICATION_SCHEME   ENUM('IBAN','SORT-CODE'),
  ACCOUNT_IDENTIFICATION_NO       VARCHAR(255) NOT NULL,
  ACCOUNT_OWNER_NAME              VARCHAR(255) NOT NULL,
  CONSTRAINT Fk_creditorAccount_merchant_id FOREIGN KEY (MERCHANT_ID) REFERENCES MERCHANTS (MERCHANT_ID) ON DELETE CASCADE,
  CONSTRAINT pk_creditor_account PRIMARY KEY (CREDITOR_ACCOUNT_UID ),
  CONSTRAINT uk_creditor_account UNIQUE (MERCHANT_ID, BANK_IDENTIFICATION_SCHEME ,BANK_IDENTIFICATION_NO , ACCOUNT_IDENTIFICATION_SCHEME ,ACCOUNT_IDENTIFICATION_NO)
)
  ENGINE = InnoDB;


CREATE TABLE IF NOT EXISTS PSU (
  PSU_USERNAME           VARCHAR(255)   NOT NULL,
  FIRST_NAME             VARCHAR(255)   NOT NULL,
  LAST_NAME             VARCHAR(255)   NOT NULL,
  PASSWORD_HASH       VARBINARY(255) NOT NULL,
  SALT               VARBINARY(255) NOT NULL,
  EMAIL             VARCHAR(255) DEFAULT NULL,
  CONSTRAINT pk_psu PRIMARY KEY (PSU_USERNAME)
)
  ENGINE = InnoDB;


CREATE TABLE IF NOT EXISTS DEBTOR_ACCOUNTS (
  DEBTOR_ACCOUNT_UID       VARCHAR(255)   NOT NULL,
  ACCOUNT_IDENTIFICATION_SCHEME  ENUM('IBAN','SORT-CODE'),
  ACCOUNT_IDENTIFICATION_NO  VARCHAR(255),
  ACCOUNT_OWNER_NAME              VARCHAR(255),
  CONSTRAINT pk_debtor_account PRIMARY KEY (DEBTOR_ACCOUNT_UID),
  CONSTRAINT uk_debtor_account UNIQUE (ACCOUNT_IDENTIFICATION_SCHEME , ACCOUNT_IDENTIFICATION_NO)
)
  ENGINE = InnoDB;

CREATE TABLE IF NOT EXISTS PAYMENTS (
  PAYMENT_INIT_REQ_ID    VARCHAR(255)   NOT NULL,
  E_SHOP_USERNAME              VARCHAR(255)   NOT NULL,
  MERCHANT_ID          VARCHAR(255)   NOT NULL,
  TRANSACTION_ID          VARCHAR(255) NOT NULL,
  CURRENCY             VARCHAR(255)   NOT NULL,
  PAYMENT_AMOUNT       DECIMAL(13, 2)  NOT NULL,
  DATE_TIME          TIMESTAMP     DEFAULT CURRENT_TIMESTAMP,
  CUSTOMER_IDENTIFICATION_BY_ESHOP  VARCHAR(255)  NOT NULL,
  DELIVERY_ADDRESS_JSON  JSON   NOT NULL,
  PSU_USERNAME                 VARCHAR(255),
  CREDITOR_ACCOUNT_UID     VARCHAR(255)   NOT NULL,
  DEBTOR_BANK_UID          VARCHAR(255) ,
  DEBTOR_ACCOUNT_UID       VARCHAR(255),
  REDIRECT_URI         VARCHAR(2047),
  PAYMENT_STATUS       ENUM ('InitiatedAtPisp', 'DebtorBankSpecified','DebtorAccountSpecified','InitiatedAtBank','SubmittedToPSUAuthorization','SubmittedToBank','Completed'),
  PAYMENT_ID           VARCHAR(255),
  AUTHORIZATION_CODE   VARCHAR(255),
  PAYMENT_SUB_ID       VARCHAR (255),
  CONSTRAINT Fk_payments_merchant_id FOREIGN KEY (MERCHANT_ID) REFERENCES MERCHANTS (MERCHANT_ID) ON DELETE CASCADE,
  CONSTRAINT Fk_payments_e_shop_username FOREIGN KEY (E_SHOP_USERNAME) REFERENCES E_SHOPS(E_SHOP_USERNAME) ON DELETE CASCADE,
  CONSTRAINT Fk_payments_creditor_account_uid FOREIGN KEY (CREDITOR_ACCOUNT_UID) REFERENCES CREDITOR_ACCOUNTS(CREDITOR_ACCOUNT_UID) ON DELETE CASCADE,
  CONSTRAINT Fk_payments_debtor_bank_uid FOREIGN KEY (DEBTOR_BANK_UID) REFERENCES BANKS(BANK_UID) ON DELETE CASCADE,
  CONSTRAINT Fk_payments_debtor_account_uid FOREIGN KEY (DEBTOR_ACCOUNT_UID) REFERENCES DEBTOR_ACCOUNTS(DEBTOR_ACCOUNT_UID) ON DELETE CASCADE,
  CONSTRAINT Fk_payments_psu FOREIGN KEY (PSU_USERNAME) REFERENCES PSU(PSU_USERNAME) ON DELETE CASCADE,
  CONSTRAINT pk_payment PRIMARY KEY (PAYMENT_INIT_REQ_ID)
)
  ENGINE = InnoDB;

CREATE TABLE IF NOT EXISTS APPLICATION_TOKENS (
  UID        INT          NOT NULL AUTO_INCREMENT,
  BANK_UID   VARCHAR(255) NOT NULL,
  TOKEN      VARCHAR(255) NOT NULL,
  TIMESTAMP  TIMESTAMP             DEFAULT CURRENT_TIMESTAMP,
  VALID_TILL DATETIME     NOT NULL,
  CONSTRAINT pk_application_tokens PRIMARY KEY (UID),
  CONSTRAINT fk_banks_bank_uid FOREIGN KEY (BANK_UID) REFERENCES BANKS (BANK_UID)
    ON DELETE CASCADE
)
  ENGINE = InnoDB;

CREATE TABLE IF NOT EXISTS USER_ACCESS_TOKENS (
  UID        INT          NOT NULL AUTO_INCREMENT,
  PAYMENT_INIT_REQ_ID   VARCHAR(255) NOT NULL,
  TOKEN      VARCHAR(255) NOT NULL,
  TIMESTAMP  TIMESTAMP             DEFAULT CURRENT_TIMESTAMP,
  VALID_TILL DATETIME     NOT NULL,
  REFRESH_TOKEN      VARCHAR(255) NOT NULL,
  CONSTRAINT pk_user_access_tokens PRIMARY KEY (UID),
  CONSTRAINT fk_user_access_tokens_payments FOREIGN KEY (PAYMENT_INIT_REQ_ID) REFERENCES PAYMENTS (PAYMENT_INIT_REQ_ID)
    ON DELETE CASCADE
)
  ENGINE = InnoDB;


CREATE TABLE IF NOT EXISTS ESHOP_SESSION_TOKENS (
  E_SHOP_USERNAME    VARCHAR(255)  NOT NULL,
  SESSION_KEY VARCHAR(2047) NOT NULL,
  EXPIRY_TIME DATETIME      NOT NULL,
  TIMESTAMP   TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT pk_session_token_e_shop_user PRIMARY KEY (E_SHOP_USERNAME),
  CONSTRAINT fk_e_shop_user FOREIGN KEY (E_SHOP_USERNAME) REFERENCES E_SHOPS(E_SHOP_USERNAME)
    ON DELETE CASCADE
)
  ENGINE = InnoDB;


CREATE TABLE IF NOT EXISTS PSU_SESSION_TOKENS (
  PSU_USERNAME    VARCHAR(255)  NOT NULL,
  SESSION_KEY VARCHAR(2047) NOT NULL,
  PAYMENT_INIT_REQ_ID    VARCHAR(255)   NOT NULL,
  EXPIRY_TIME DATETIME      NOT NULL,
  TIMESTAMP   TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT pk_session_token_psu_user PRIMARY KEY (PSU_USERNAME),
  CONSTRAINT fk_psu_user FOREIGN KEY (PSU_USERNAME) REFERENCES PSU(PSU_USERNAME),
  CONSTRAINT fk_psu_session_tokens_payments FOREIGN KEY (PAYMENT_INIT_REQ_ID) REFERENCES PAYMENTS(PAYMENT_INIT_REQ_ID)
    ON DELETE CASCADE
)
  ENGINE = InnoDB;


CREATE TABLE IF NOT EXISTS PSU_DEBTOR_ACCOUNTS_INFO (
  DEBTOR_ACCOUNT_UID       VARCHAR(255)   NOT NULL,
  PSU_USERNAME           VARCHAR(255)   NOT NULL,
  CONSTRAINT pk_psu_debtor_acccount PRIMARY KEY (DEBTOR_ACCOUNT_UID, PSU_USERNAME),
  CONSTRAINT Fk_psu_debtor_account_uid FOREIGN KEY (DEBTOR_ACCOUNT_UID) REFERENCES DEBTOR_ACCOUNTS(DEBTOR_ACCOUNT_UID) ON DELETE CASCADE,
  CONSTRAINT Fk_psu_debtor_account FOREIGN KEY (PSU_USERNAME) REFERENCES PSU(PSU_USERNAME) ON DELETE CASCADE
)
  ENGINE = InnoDB;